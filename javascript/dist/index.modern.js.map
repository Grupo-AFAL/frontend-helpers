{"version":3,"file":"index.modern.js","sources":["../src/controllers/dropdown-controller.js","../src/utils/time.js","../src/utils/domHelpers.js","../src/controllers/dynamic-fields-controller.js"],"sourcesContent":["import { Controller } from 'stimulus'\n\nexport default class DropdownController extends Controller {\n  connect () {\n    document.addEventListener('click', this.closeDropdowns)\n  }\n\n  disconnect () {\n    document.removeEventListener('click', this.closeDropdowns)\n  }\n\n  toggleMenu (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    this.element.classList.toggle('is-active')\n  }\n\n  closeDropdowns = () => {\n    this.element.classList.remove('is-active')\n  }\n}\n","/**\n * Returns a 13 digit timestamp + random number between 1 and 100\n */\nexport const getTimestamp = () => {\n  const randomNumber = Math.floor(Math.random() * 100 + 1)\n  return new Date().getTime().toString() + randomNumber\n}\n\n/**\n * Utility function used wait until something is loaded\n *\n * @param {*} f Waits until this function evaluates to a truthy value\n * @param {*} timeoutMs timeout in ms\n */\nexport const waitUntil = async (f, timeoutMs = 2000) => {\n  const checkEveryMs = 50\n\n  return new Promise((resolve, reject) => {\n    const timeWas = new Date()\n    const wait = setInterval(function () {\n      const result = f()\n      if (result) {\n        clearInterval(wait)\n        resolve(result)\n      } else if (new Date() - timeWas > timeoutMs) {\n        clearInterval(wait)\n        reject()\n      }\n    }, checkEveryMs)\n  })\n}\n","export const replaceInFragment = (fragment, regex, replaceValue) => {\n  const templateString = fragment.innerHTML.replace(regex, replaceValue)\n  return stringToDOMNode(templateString)\n}\n\nexport const stringToDOMNode = htmlString => {\n  const template = document.createElement('template')\n  template.innerHTML = htmlString\n  return template.content\n}\n\n/**\n * Replaces a Node with the an HTML string fragment\n *\n * @param {HTMLElement} oldNode - DOM Node to be replaced\n * @param {string} htmlString - HTML string with the new node\n */\nexport const replaceDOMNode = (oldNode, htmlString) => {\n  const newNode = stringToDOMNode(htmlString)\n  oldNode.parentNode.replaceChild(newNode, oldNode)\n}\n\nexport const removeNonHiddenFormElements = fragment => {\n  const removeNodes = input => {\n    if (input.type === 'hidden') return\n    input.remove()\n  }\n\n  fragment.querySelectorAll('input').forEach(removeNodes)\n  fragment.querySelectorAll('textarea').forEach(removeNodes)\n  fragment.querySelectorAll('select').forEach(removeNodes)\n\n  return fragment\n}\n\nexport const previousSibling = (element, selector) => {\n  let previousElement = element.previousElementSibling\n  if (!previousElement) return null\n\n  while (!previousElement.matches(selector)) {\n    previousElement = previousElement.previousElementSibling\n    if (!previousElement) return null\n  }\n\n  return previousElement\n}\n\nexport const nextSibling = (element, selector) => {\n  let nextElement = element.nextElementSibling\n  if (!nextElement) return null\n\n  while (!nextElement.matches(selector)) {\n    nextElement = nextElement.nextElementSibling\n    if (!nextElement) return null\n  }\n\n  return nextElement\n}\n","import { Controller } from 'stimulus'\nimport { getTimestamp } from '../utils/time'\nimport {\n  replaceInFragment,\n  removeNonHiddenFormElements,\n  previousSibling,\n  nextSibling\n} from '../utils/domHelpers'\n\nexport default class DynamicFieldsController extends Controller {\n  static targets = ['template', 'container', 'button']\n\n  connect () {\n    this.fieldsSelector = this.data.get('selector')\n    this.removeDuplicates = this.data.get('removeDuplicates')\n    if (this.isAtMaximumSize()) {\n      this.buttonTarget.setAttribute('disabled', true)\n    }\n  }\n\n  addFields (e) {\n    e.preventDefault()\n    if (this.isAtMaximumSize()) return false\n\n    this.setSize(this.getSize() + 1)\n\n    const template = this.removeDuplicates\n      ? this.templateFragmentWithoutDuplicates()\n      : this.templateFragment()\n\n    const positionInput = template.querySelector('[data-position]')\n    if (positionInput) positionInput.value = this.getSize()\n    this.containerTarget.appendChild(template)\n\n    if (this.isAtMaximumSize()) {\n      this.buttonTarget.setAttribute('disabled', true)\n    }\n  }\n\n  removeFields (e) {\n    e.preventDefault()\n    this.setSize(this.getSize() - 1)\n\n    const fieldsContainer = e.target.closest(this.fieldsSelector)\n    fieldsContainer.style.display = 'none'\n    removeNonHiddenFormElements(fieldsContainer)\n    fieldsContainer.querySelector('.destroy-flag').value = true\n\n    if (this.hasButtonTarget && this.buttonTarget.hasAttribute('disabled')) {\n      this.buttonTarget.removeAttribute('disabled')\n    }\n  }\n\n  moveUp (e) {\n    e.preventDefault()\n\n    const fieldsContainer1 = e.target.closest(this.fieldsSelector)\n    const fieldsContainer2 = previousSibling(\n      fieldsContainer1,\n      this.fieldsSelector\n    )\n\n    this.swapElements(fieldsContainer1, fieldsContainer2)\n    this.resetPositionValues()\n  }\n\n  moveDown (e) {\n    e.preventDefault()\n\n    const fieldsContainer1 = e.target.closest(this.fieldsSelector)\n    const fieldsContainer2 = nextSibling(fieldsContainer1, this.fieldsSelector)\n\n    this.swapElements(fieldsContainer1, fieldsContainer2)\n    this.resetPositionValues()\n  }\n\n  swapElements (elm1, elm2) {\n    var parent, next1, next2\n\n    if (elm2 == null) return\n\n    parent = elm1.parentNode\n    next1 = elm1.nextElementSibling\n    next2 = elm2.nextElementSibling\n\n    parent.insertBefore(elm2, next1)\n    parent.insertBefore(elm1, next2)\n  }\n\n  resetPositionValues () {\n    this.element\n      .querySelectorAll(this.fieldsSelector)\n      .forEach((fields, index) => {\n        fields.querySelector('[data-position]').value = index + 1\n      })\n  }\n\n  templateFragment () {\n    return replaceInFragment(this.templateTarget, /new_record/g, getTimestamp())\n  }\n\n  templateFragmentWithoutDuplicates () {\n    // Get currently selected values\n    const selectedValues = Array.from(\n      this.element.querySelectorAll(`${this.fieldsSelector} select`)\n    ).map(node => node.value)\n\n    // Remove already selected values\n    const template = this.templateFragment()\n    template.querySelectorAll('select option').forEach(option => {\n      if (selectedValues.includes(option.value)) {\n        option.remove()\n      }\n    })\n\n    return template\n  }\n\n  dropdownOptionsSize () {\n    return this.templateFragment().querySelectorAll('select option').length\n  }\n\n  isAtMaximumSize () {\n    return (\n      this.removeDuplicates && this.dropdownOptionsSize() === this.getSize()\n    )\n  }\n\n  getSize () {\n    return parseInt(this.data.get('size'))\n  }\n\n  setSize (size) {\n    this.data.set('size', size)\n  }\n}\n"],"names":["DropdownController","Controller","closeDropdowns","element","classList","remove","connect","document","addEventListener","disconnect","removeEventListener","toggleMenu","e","stopPropagation","preventDefault","toggle","getTimestamp","randomNumber","Math","floor","random","Date","getTime","toString","replaceInFragment","fragment","regex","replaceValue","templateString","innerHTML","replace","stringToDOMNode","htmlString","template","createElement","content","removeNonHiddenFormElements","removeNodes","input","type","querySelectorAll","forEach","previousSibling","selector","previousElement","previousElementSibling","matches","nextSibling","nextElement","nextElementSibling","DynamicFieldsController","fieldsSelector","data","get","removeDuplicates","isAtMaximumSize","buttonTarget","setAttribute","addFields","setSize","getSize","templateFragmentWithoutDuplicates","templateFragment","positionInput","querySelector","value","containerTarget","appendChild","removeFields","fieldsContainer","target","closest","style","display","hasButtonTarget","hasAttribute","removeAttribute","moveUp","fieldsContainer1","fieldsContainer2","swapElements","resetPositionValues","moveDown","elm1","elm2","parent","next1","next2","parentNode","insertBefore","fields","index","templateTarget","selectedValues","Array","from","map","node","option","includes","dropdownOptionsSize","length","parseInt","size","set","targets"],"mappings":"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"}