{"version":3,"file":"index.modern.js","sources":["../src/controllers/dropdown-controller.js","../src/controllers/dynamic-fields-controller.js","../src/utils/domHelpers.js","../src/utils/time.js"],"sourcesContent":["import { Controller } from 'stimulus'\n\nexport default class DropdownController extends Controller {\n  connect () {\n    document.addEventListener('click', this.closeDropdowns)\n  }\n\n  disconnect () {\n    document.removeEventListener('click', this.closeDropdowns)\n  }\n\n  toggleMenu (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    this.element.classList.toggle('is-active')\n  }\n\n  closeDropdowns = () => {\n    this.element.classList.remove('is-active')\n  }\n}\n","import { Controller } from 'stimulus'\nimport { getTimestamp } from '../utils/time'\nimport {\n  replaceInFragment,\n  removeNonHiddenFormElements,\n  previousSibling,\n  nextSibling\n} from '../utils/domHelpers'\n\nexport default class DynamicFieldsController extends Controller {\n  static targets = ['template', 'container', 'button']\n\n  connect () {\n    this.fieldsSelector = this.data.get('selector')\n    this.removeDuplicates = this.data.get('removeDuplicates')\n    if (this.isAtMaximumSize()) {\n      this.buttonTarget.setAttribute('disabled', true)\n    }\n  }\n\n  addFields (e) {\n    e.preventDefault()\n    if (this.isAtMaximumSize()) return false\n\n    this.setSize(this.getSize() + 1)\n\n    const template = this.removeDuplicates\n      ? this.templateFragmentWithoutDuplicates()\n      : this.templateFragment()\n\n    const positionInput = template.querySelector('[data-position]')\n    if (positionInput) positionInput.value = this.getSize()\n    this.containerTarget.appendChild(template)\n\n    if (this.isAtMaximumSize()) {\n      this.buttonTarget.setAttribute('disabled', true)\n    }\n  }\n\n  removeFields (e) {\n    e.preventDefault()\n    this.setSize(this.getSize() - 1)\n\n    const fieldsContainer = e.target.closest(this.fieldsSelector)\n    fieldsContainer.style.display = 'none'\n    removeNonHiddenFormElements(fieldsContainer)\n    fieldsContainer.querySelector('.destroy-flag').value = true\n\n    if (this.hasButtonTarget && this.buttonTarget.hasAttribute('disabled')) {\n      this.buttonTarget.removeAttribute('disabled')\n    }\n  }\n\n  moveUp (e) {\n    e.preventDefault()\n\n    const fieldsContainer1 = e.target.closest(this.fieldsSelector)\n    const fieldsContainer2 = previousSibling(\n      fieldsContainer1,\n      this.fieldsSelector\n    )\n\n    this.swapElements(fieldsContainer1, fieldsContainer2)\n    this.resetPositionValues()\n  }\n\n  moveDown (e) {\n    e.preventDefault()\n\n    const fieldsContainer1 = e.target.closest(this.fieldsSelector)\n    const fieldsContainer2 = nextSibling(fieldsContainer1, this.fieldsSelector)\n\n    this.swapElements(fieldsContainer1, fieldsContainer2)\n    this.resetPositionValues()\n  }\n\n  swapElements (elm1, elm2) {\n    var parent, next1, next2\n\n    if (elm2 == null) return\n\n    parent = elm1.parentNode\n    next1 = elm1.nextElementSibling\n    next2 = elm2.nextElementSibling\n\n    parent.insertBefore(elm2, next1)\n    parent.insertBefore(elm1, next2)\n  }\n\n  resetPositionValues () {\n    this.element\n      .querySelectorAll(this.fieldsSelector)\n      .forEach((fields, index) => {\n        fields.querySelector('[data-position]').value = index + 1\n      })\n  }\n\n  templateFragment () {\n    return replaceInFragment(this.templateTarget, /new_record/g, getTimestamp())\n  }\n\n  templateFragmentWithoutDuplicates () {\n    // Get currently selected values\n    const selectedValues = Array.from(\n      this.element.querySelectorAll(`${this.fieldsSelector} select`)\n    ).map(node => node.value)\n\n    // Remove already selected values\n    const template = this.templateFragment()\n    template.querySelectorAll('select option').forEach(option => {\n      if (selectedValues.includes(option.value)) {\n        option.remove()\n      }\n    })\n\n    return template\n  }\n\n  dropdownOptionsSize () {\n    return this.templateFragment().querySelectorAll('select option').length\n  }\n\n  isAtMaximumSize () {\n    return (\n      this.removeDuplicates && this.dropdownOptionsSize() === this.getSize()\n    )\n  }\n\n  getSize () {\n    return parseInt(this.data.get('size'))\n  }\n\n  setSize (size) {\n    this.data.set('size', size)\n  }\n}\n","export const replaceInFragment = (fragment, regex, replaceValue) => {\n  const templateString = fragment.innerHTML.replace(regex, replaceValue)\n  return stringToDOMNode(templateString)\n}\n\nexport const stringToDOMNode = htmlString => {\n  const template = document.createElement('template')\n  template.innerHTML = htmlString\n  return template.content\n}\n\n/**\n * Replaces a Node with the an HTML string fragment\n *\n * @param {HTMLElement} oldNode - DOM Node to be replaced\n * @param {string} htmlString - HTML string with the new node\n */\nexport const replaceDOMNode = (oldNode, htmlString) => {\n  const newNode = stringToDOMNode(htmlString)\n  oldNode.parentNode.replaceChild(newNode, oldNode)\n}\n\nexport const removeNonHiddenFormElements = fragment => {\n  const removeNodes = input => {\n    if (input.type === 'hidden') return\n    input.remove()\n  }\n\n  fragment.querySelectorAll('input').forEach(removeNodes)\n  fragment.querySelectorAll('textarea').forEach(removeNodes)\n  fragment.querySelectorAll('select').forEach(removeNodes)\n\n  return fragment\n}\n\nexport const previousSibling = (element, selector) => {\n  let previousElement = element.previousElementSibling\n  if (!previousElement) return null\n\n  while (!previousElement.matches(selector)) {\n    previousElement = previousElement.previousElementSibling\n    if (!previousElement) return null\n  }\n\n  return previousElement\n}\n\nexport const nextSibling = (element, selector) => {\n  let nextElement = element.nextElementSibling\n  if (!nextElement) return null\n\n  while (!nextElement.matches(selector)) {\n    nextElement = nextElement.nextElementSibling\n    if (!nextElement) return null\n  }\n\n  return nextElement\n}\n","/**\n * Returns a 13 digit timestamp + random number between 1 and 100\n */\nexport const getTimestamp = () => {\n  const randomNumber = Math.floor(Math.random() * 100 + 1)\n  return new Date().getTime().toString() + randomNumber\n}\n\n/**\n * Utility function used wait until something is loaded\n *\n * @param {*} f Waits until this function evaluates to a truthy value\n * @param {*} timeoutMs timeout in ms\n */\nexport const waitUntil = async (f, timeoutMs = 2000) => {\n  const checkEveryMs = 50\n\n  return new Promise((resolve, reject) => {\n    const timeWas = new Date()\n    const wait = setInterval(function () {\n      const result = f()\n      if (result) {\n        clearInterval(wait)\n        resolve(result)\n      } else if (new Date() - timeWas > timeoutMs) {\n        clearInterval(wait)\n        reject()\n      }\n    }, checkEveryMs)\n  })\n}\n"],"names":["DropdownController","Controller","closeDropdowns","this","element","classList","remove","connect","document","addEventListener","disconnect","removeEventListener","toggleMenu","e","stopPropagation","preventDefault","toggle","DynamicFieldsController","fieldsSelector","data","get","removeDuplicates","isAtMaximumSize","buttonTarget","setAttribute","addFields","setSize","getSize","template","templateFragmentWithoutDuplicates","templateFragment","positionInput","querySelector","value","containerTarget","appendChild","removeFields","fieldsContainer","target","closest","style","display","fragment","removeNodes","input","type","querySelectorAll","forEach","removeNonHiddenFormElements","hasButtonTarget","hasAttribute","removeAttribute","moveUp","fieldsContainer1","fieldsContainer2","selector","previousElement","previousElementSibling","matches","previousSibling","swapElements","resetPositionValues","moveDown","nextElement","nextElementSibling","nextSibling","elm1","elm2","parent","next2","parentNode","insertBefore","fields","index","templateTarget","replaceValue","randomNumber","Math","floor","random","Date","getTime","toString","getTimestamp","htmlString","createElement","innerHTML","content","stringToDOMNode","replace","selectedValues","Array","from","map","node","option","includes","dropdownOptionsSize","length","parseInt","size","set","targets"],"mappings":"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"}