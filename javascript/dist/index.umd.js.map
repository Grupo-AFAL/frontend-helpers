{"version":3,"file":"index.umd.js","sources":["../src/controllers/dropdown-controller.js","../src/utils/time.js","../src/utils/domHelpers.js","../src/controllers/dynamic-fields-controller.js"],"sourcesContent":["import { Controller } from 'stimulus'\n\nexport default class DropdownController extends Controller {\n  connect () {\n    document.addEventListener('click', this.closeDropdowns)\n  }\n\n  disconnect () {\n    document.removeEventListener('click', this.closeDropdowns)\n  }\n\n  toggleMenu (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    this.element.classList.toggle('is-active')\n  }\n\n  closeDropdowns = () => {\n    this.element.classList.remove('is-active')\n  }\n}\n","/**\n * Returns a 13 digit timestamp + random number between 1 and 100\n */\nexport const getTimestamp = () => {\n  const randomNumber = Math.floor(Math.random() * 100 + 1)\n  return new Date().getTime().toString() + randomNumber\n}\n\n/**\n * Utility function used wait until something is loaded\n *\n * @param {*} f Waits until this function evaluates to a truthy value\n * @param {*} timeoutMs timeout in ms\n */\nexport const waitUntil = async (f, timeoutMs = 2000) => {\n  const checkEveryMs = 50\n\n  return new Promise((resolve, reject) => {\n    const timeWas = new Date()\n    const wait = setInterval(function () {\n      const result = f()\n      if (result) {\n        clearInterval(wait)\n        resolve(result)\n      } else if (new Date() - timeWas > timeoutMs) {\n        clearInterval(wait)\n        reject()\n      }\n    }, checkEveryMs)\n  })\n}\n","export const replaceInFragment = (fragment, regex, replaceValue) => {\n  const templateString = fragment.innerHTML.replace(regex, replaceValue)\n  return stringToDOMNode(templateString)\n}\n\nexport const stringToDOMNode = htmlString => {\n  const template = document.createElement('template')\n  template.innerHTML = htmlString\n  return template.content\n}\n\n/**\n * Replaces a Node with the an HTML string fragment\n *\n * @param {HTMLElement} oldNode - DOM Node to be replaced\n * @param {string} htmlString - HTML string with the new node\n */\nexport const replaceDOMNode = (oldNode, htmlString) => {\n  const newNode = stringToDOMNode(htmlString)\n  oldNode.parentNode.replaceChild(newNode, oldNode)\n}\n\nexport const removeNonHiddenFormElements = fragment => {\n  const removeNodes = input => {\n    if (input.type === 'hidden') return\n    input.remove()\n  }\n\n  fragment.querySelectorAll('input').forEach(removeNodes)\n  fragment.querySelectorAll('textarea').forEach(removeNodes)\n  fragment.querySelectorAll('select').forEach(removeNodes)\n\n  return fragment\n}\n\nexport const previousSibling = (element, selector) => {\n  let previousElement = element.previousElementSibling\n  if (!previousElement) return null\n\n  while (!previousElement.matches(selector)) {\n    previousElement = previousElement.previousElementSibling\n    if (!previousElement) return null\n  }\n\n  return previousElement\n}\n\nexport const nextSibling = (element, selector) => {\n  let nextElement = element.nextElementSibling\n  if (!nextElement) return null\n\n  while (!nextElement.matches(selector)) {\n    nextElement = nextElement.nextElementSibling\n    if (!nextElement) return null\n  }\n\n  return nextElement\n}\n","import { Controller } from 'stimulus'\nimport { getTimestamp } from '../utils/time'\nimport {\n  replaceInFragment,\n  removeNonHiddenFormElements,\n  previousSibling,\n  nextSibling\n} from '../utils/domHelpers'\n\nexport default class DynamicFieldsController extends Controller {\n  static targets = ['template', 'container', 'button']\n\n  connect () {\n    this.fieldsSelector = this.data.get('selector')\n    this.removeDuplicates = this.data.get('removeDuplicates')\n    if (this.isAtMaximumSize()) {\n      this.buttonTarget.setAttribute('disabled', true)\n    }\n  }\n\n  addFields (e) {\n    e.preventDefault()\n    if (this.isAtMaximumSize()) return false\n\n    this.setSize(this.getSize() + 1)\n\n    const template = this.removeDuplicates\n      ? this.templateFragmentWithoutDuplicates()\n      : this.templateFragment()\n\n    const positionInput = template.querySelector('[data-position]')\n    if (positionInput) positionInput.value = this.getSize()\n    this.containerTarget.appendChild(template)\n\n    if (this.isAtMaximumSize()) {\n      this.buttonTarget.setAttribute('disabled', true)\n    }\n  }\n\n  removeFields (e) {\n    e.preventDefault()\n    this.setSize(this.getSize() - 1)\n\n    const fieldsContainer = e.target.closest(this.fieldsSelector)\n    fieldsContainer.style.display = 'none'\n    removeNonHiddenFormElements(fieldsContainer)\n    fieldsContainer.querySelector('.destroy-flag').value = true\n\n    if (this.hasButtonTarget && this.buttonTarget.hasAttribute('disabled')) {\n      this.buttonTarget.removeAttribute('disabled')\n    }\n  }\n\n  moveUp (e) {\n    e.preventDefault()\n\n    const fieldsContainer1 = e.target.closest(this.fieldsSelector)\n    const fieldsContainer2 = previousSibling(\n      fieldsContainer1,\n      this.fieldsSelector\n    )\n\n    this.swapElements(fieldsContainer1, fieldsContainer2)\n    this.resetPositionValues()\n  }\n\n  moveDown (e) {\n    e.preventDefault()\n\n    const fieldsContainer1 = e.target.closest(this.fieldsSelector)\n    const fieldsContainer2 = nextSibling(fieldsContainer1, this.fieldsSelector)\n\n    this.swapElements(fieldsContainer1, fieldsContainer2)\n    this.resetPositionValues()\n  }\n\n  swapElements (elm1, elm2) {\n    var parent, next1, next2\n\n    if (elm2 == null) return\n\n    parent = elm1.parentNode\n    next1 = elm1.nextElementSibling\n    next2 = elm2.nextElementSibling\n\n    parent.insertBefore(elm2, next1)\n    parent.insertBefore(elm1, next2)\n  }\n\n  resetPositionValues () {\n    this.element\n      .querySelectorAll(this.fieldsSelector)\n      .forEach((fields, index) => {\n        fields.querySelector('[data-position]').value = index + 1\n      })\n  }\n\n  templateFragment () {\n    return replaceInFragment(this.templateTarget, /new_record/g, getTimestamp())\n  }\n\n  templateFragmentWithoutDuplicates () {\n    // Get currently selected values\n    const selectedValues = Array.from(\n      this.element.querySelectorAll(`${this.fieldsSelector} select`)\n    ).map(node => node.value)\n\n    // Remove already selected values\n    const template = this.templateFragment()\n    template.querySelectorAll('select option').forEach(option => {\n      if (selectedValues.includes(option.value)) {\n        option.remove()\n      }\n    })\n\n    return template\n  }\n\n  dropdownOptionsSize () {\n    return this.templateFragment().querySelectorAll('select option').length\n  }\n\n  isAtMaximumSize () {\n    return (\n      this.removeDuplicates && this.dropdownOptionsSize() === this.getSize()\n    )\n  }\n\n  getSize () {\n    return parseInt(this.data.get('size'))\n  }\n\n  setSize (size) {\n    this.data.set('size', size)\n  }\n}\n"],"names":["DropdownController","closeDropdowns","element","classList","remove","connect","document","addEventListener","disconnect","removeEventListener","toggleMenu","e","stopPropagation","preventDefault","toggle","Controller","getTimestamp","randomNumber","Math","floor","random","Date","getTime","toString","replaceInFragment","fragment","regex","replaceValue","templateString","innerHTML","replace","stringToDOMNode","htmlString","template","createElement","content","removeNonHiddenFormElements","removeNodes","input","type","querySelectorAll","forEach","previousSibling","selector","previousElement","previousElementSibling","matches","nextSibling","nextElement","nextElementSibling","DynamicFieldsController","fieldsSelector","data","get","removeDuplicates","isAtMaximumSize","buttonTarget","setAttribute","addFields","setSize","getSize","templateFragmentWithoutDuplicates","templateFragment","positionInput","querySelector","value","containerTarget","appendChild","removeFields","fieldsContainer","target","closest","style","display","hasButtonTarget","hasAttribute","removeAttribute","moveUp","fieldsContainer1","fieldsContainer2","swapElements","resetPositionValues","moveDown","elm1","elm2","parent","next1","next2","parentNode","insertBefore","fields","index","templateTarget","selectedValues","Array","from","map","node","option","includes","dropdownOptionsSize","length","parseInt","size","set","targets"],"mappings":"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"}