{"version":3,"file":"index.js","sources":["../src/controllers/dropdown-controller.js","../src/controllers/dynamic-fields-controller.js","../src/utils/domHelpers.js","../src/utils/time.js"],"sourcesContent":["import { Controller } from 'stimulus'\n\nexport default class DropdownController extends Controller {\n  connect () {\n    document.addEventListener('click', this.closeDropdowns)\n  }\n\n  disconnect () {\n    document.removeEventListener('click', this.closeDropdowns)\n  }\n\n  toggleMenu (e) {\n    e.stopPropagation()\n    e.preventDefault()\n    this.element.classList.toggle('is-active')\n  }\n\n  closeDropdowns = () => {\n    this.element.classList.remove('is-active')\n  }\n}\n","import { Controller } from 'stimulus'\nimport { getTimestamp } from '../utils/time'\nimport {\n  replaceInFragment,\n  removeNonHiddenFormElements,\n  previousSibling,\n  nextSibling\n} from '../utils/domHelpers'\n\nexport default class DynamicFieldsController extends Controller {\n  static targets = ['template', 'container', 'button']\n\n  connect () {\n    this.fieldsSelector = this.data.get('selector')\n    this.removeDuplicates = this.data.get('removeDuplicates')\n    if (this.isAtMaximumSize()) {\n      this.buttonTarget.setAttribute('disabled', true)\n    }\n  }\n\n  addFields (e) {\n    e.preventDefault()\n    if (this.isAtMaximumSize()) return false\n\n    this.setSize(this.getSize() + 1)\n\n    const template = this.removeDuplicates\n      ? this.templateFragmentWithoutDuplicates()\n      : this.templateFragment()\n\n    const positionInput = template.querySelector('[data-position]')\n    if (positionInput) positionInput.value = this.getSize()\n    this.containerTarget.appendChild(template)\n\n    if (this.isAtMaximumSize()) {\n      this.buttonTarget.setAttribute('disabled', true)\n    }\n  }\n\n  removeFields (e) {\n    e.preventDefault()\n    this.setSize(this.getSize() - 1)\n\n    const fieldsContainer = e.target.closest(this.fieldsSelector)\n    fieldsContainer.style.display = 'none'\n    removeNonHiddenFormElements(fieldsContainer)\n    fieldsContainer.querySelector('.destroy-flag').value = true\n\n    if (this.hasButtonTarget && this.buttonTarget.hasAttribute('disabled')) {\n      this.buttonTarget.removeAttribute('disabled')\n    }\n  }\n\n  moveUp (e) {\n    e.preventDefault()\n\n    const fieldsContainer1 = e.target.closest(this.fieldsSelector)\n    const fieldsContainer2 = previousSibling(\n      fieldsContainer1,\n      this.fieldsSelector\n    )\n\n    this.swapElements(fieldsContainer1, fieldsContainer2)\n    this.resetPositionValues()\n  }\n\n  moveDown (e) {\n    e.preventDefault()\n\n    const fieldsContainer1 = e.target.closest(this.fieldsSelector)\n    const fieldsContainer2 = nextSibling(fieldsContainer1, this.fieldsSelector)\n\n    this.swapElements(fieldsContainer1, fieldsContainer2)\n    this.resetPositionValues()\n  }\n\n  swapElements (elm1, elm2) {\n    var parent, next1, next2\n\n    if (elm2 == null) return\n\n    parent = elm1.parentNode\n    next1 = elm1.nextElementSibling\n    next2 = elm2.nextElementSibling\n\n    parent.insertBefore(elm2, next1)\n    parent.insertBefore(elm1, next2)\n  }\n\n  resetPositionValues () {\n    this.element\n      .querySelectorAll(this.fieldsSelector)\n      .forEach((fields, index) => {\n        fields.querySelector('[data-position]').value = index + 1\n      })\n  }\n\n  templateFragment () {\n    return replaceInFragment(this.templateTarget, /new_record/g, getTimestamp())\n  }\n\n  templateFragmentWithoutDuplicates () {\n    // Get currently selected values\n    const selectedValues = Array.from(\n      this.element.querySelectorAll(`${this.fieldsSelector} select`)\n    ).map(node => node.value)\n\n    // Remove already selected values\n    const template = this.templateFragment()\n    template.querySelectorAll('select option').forEach(option => {\n      if (selectedValues.includes(option.value)) {\n        option.remove()\n      }\n    })\n\n    return template\n  }\n\n  dropdownOptionsSize () {\n    return this.templateFragment().querySelectorAll('select option').length\n  }\n\n  isAtMaximumSize () {\n    return (\n      this.removeDuplicates && this.dropdownOptionsSize() === this.getSize()\n    )\n  }\n\n  getSize () {\n    return parseInt(this.data.get('size'))\n  }\n\n  setSize (size) {\n    this.data.set('size', size)\n  }\n}\n","export const replaceInFragment = (fragment, regex, replaceValue) => {\n  const templateString = fragment.innerHTML.replace(regex, replaceValue)\n  return stringToDOMNode(templateString)\n}\n\nexport const stringToDOMNode = htmlString => {\n  const template = document.createElement('template')\n  template.innerHTML = htmlString\n  return template.content\n}\n\n/**\n * Replaces a Node with the an HTML string fragment\n *\n * @param {HTMLElement} oldNode - DOM Node to be replaced\n * @param {string} htmlString - HTML string with the new node\n */\nexport const replaceDOMNode = (oldNode, htmlString) => {\n  const newNode = stringToDOMNode(htmlString)\n  oldNode.parentNode.replaceChild(newNode, oldNode)\n}\n\nexport const removeNonHiddenFormElements = fragment => {\n  const removeNodes = input => {\n    if (input.type === 'hidden') return\n    input.remove()\n  }\n\n  fragment.querySelectorAll('input').forEach(removeNodes)\n  fragment.querySelectorAll('textarea').forEach(removeNodes)\n  fragment.querySelectorAll('select').forEach(removeNodes)\n\n  return fragment\n}\n\nexport const previousSibling = (element, selector) => {\n  let previousElement = element.previousElementSibling\n  if (!previousElement) return null\n\n  while (!previousElement.matches(selector)) {\n    previousElement = previousElement.previousElementSibling\n    if (!previousElement) return null\n  }\n\n  return previousElement\n}\n\nexport const nextSibling = (element, selector) => {\n  let nextElement = element.nextElementSibling\n  if (!nextElement) return null\n\n  while (!nextElement.matches(selector)) {\n    nextElement = nextElement.nextElementSibling\n    if (!nextElement) return null\n  }\n\n  return nextElement\n}\n","/**\n * Returns a 13 digit timestamp + random number between 1 and 100\n */\nexport const getTimestamp = () => {\n  const randomNumber = Math.floor(Math.random() * 100 + 1)\n  return new Date().getTime().toString() + randomNumber\n}\n\n/**\n * Utility function used wait until something is loaded\n *\n * @param {*} f Waits until this function evaluates to a truthy value\n * @param {*} timeoutMs timeout in ms\n */\nexport const waitUntil = async (f, timeoutMs = 2000) => {\n  const checkEveryMs = 50\n\n  return new Promise((resolve, reject) => {\n    const timeWas = new Date()\n    const wait = setInterval(function () {\n      const result = f()\n      if (result) {\n        clearInterval(wait)\n        resolve(result)\n      } else if (new Date() - timeWas > timeoutMs) {\n        clearInterval(wait)\n        reject()\n      }\n    }, checkEveryMs)\n  })\n}\n"],"names":["DropdownController","closeDropdowns","_this","element","classList","remove","connect","document","addEventListener","this","disconnect","removeEventListener","toggleMenu","e","stopPropagation","preventDefault","toggle","Controller","DynamicFieldsController","fieldsSelector","data","get","removeDuplicates","isAtMaximumSize","buttonTarget","setAttribute","addFields","setSize","getSize","template","templateFragmentWithoutDuplicates","templateFragment","positionInput","querySelector","value","containerTarget","appendChild","removeFields","fragment","removeNodes","fieldsContainer","target","closest","style","display","input","type","querySelectorAll","forEach","hasButtonTarget","hasAttribute","removeAttribute","moveUp","fieldsContainer1","fieldsContainer2","selector","previousElement","previousElementSibling","matches","previousSibling","swapElements","resetPositionValues","moveDown","nextElement","nextElementSibling","nextSibling","elm1","elm2","parent","next2","parentNode","insertBefore","fields","index","templateTarget","regex","randomNumber","Math","floor","random","replaceValue","Date","getTime","toString","htmlString","innerHTML","replace","createElement","content","selectedValues","Array","from","map","node","option","includes","dropdownOptionsSize","length","parseInt","size","set","targets"],"mappings":"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"}